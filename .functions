alias clip='xclip -selection c'

WORKDIR=~/attackiq
VPNDIR=~/vpn
ANSIBLEDIR=~/qustodio/deployment/ansible
SCENARIOS_DIR=$WORKDIR/scenarios/released

work () {
  if [ -d $WORKDIR/$1 ]
  then
    cd $WORKDIR/$1 &> /dev/null
    workon $1 &> /dev/null
    source .vars &> /dev/null
  elif [ -f $VPNDIR/$1 ]
  then
    cd $VPNDIR
    ./$1
  elif [ $1 = 'ansible' ]
  then
    cd $ANSIBLEDIR
    workon $1
  fi
}

worksc () {
  if [ -d $SCENARIOS_DIR/$1 ]
  then
    cd $SCENARIOS_DIR/$1 &> /dev/null
    workon $1 &> /dev/null
    source vars &> /dev/null
  elif [ -f $VPNDIR/$1 ]
  then
    cd $VPNDIR
    ./$1
  elif [ $1 = 'ansible' ]
  then
    cd $ANSIBLEDIR
    workon $1
  fi 
}

deploy_qustodio_old () {
  work ansible
  PROJECT=$1
  ENV=$2
  BRANCH=''
  STATUS_VPN=$(osascript ~/vpn/status.scpt $ENV)
  
  if [ $STATUS_VPN != 'CONNECTED' ]; then
    osascript ~/vpn/disconnect.scpt
    osascript ~/vpn/connect_$ENV.scpt
  fi
  if [ $# > 3 ]
  then
    BRANCH=$3
  fi
  COMMAND="-i hosts --limit "$PROJECT"s_"$ENV" -vvvv site.yml"
  if [ "$BRANCH" != '' ]
  then
    COMMAND="$COMMAND -e branch=$BRANCH -e qapi_branch=$BRANCH"
  fi
  echo $COMMAND
  $(ansible-playbook "$COMMAND")
}

goo () {
  if [ -d $1 ]; then
    cd $1;
  elif [ -f $1 ]; then
    open $1;
  elif [ -d .git ]; then
    git co $1;
  fi
}
